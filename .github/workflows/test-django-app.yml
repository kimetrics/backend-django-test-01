name: Python application

on: [push]
#  push:
#    branches:
#      - features
#    tags:
#      - '**'
#  pull_request:
#    branches:
#      - main

jobs:

  test:
    name: Testing
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.0-alpine
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - "5432:5432"

    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Set up Python 3.8.5
      uses: actions/setup-python@v2
      with:
        python-version: 3.8.5

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Running django tests
      run: |
        cd src
        python manage.py test
      env:
        DB_NAME: test
        DB_USER: test
        DB_PASS: test
        DB_HOST: 127.0.0.1
        DB_PORT: 5432

    - name: Lint with flake8
      run: |
        cd src
        flake8


  docker-build:
    name: Docker build
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2

    - name: Build and Push to Docker Hub
      uses: docker/build-push-action@v1
      with:
        dockerfile: ./Dockerfile
        repository: ${{ secrets.KIMETRICS_DOCKERHUB_REPOSITORY }}
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        push: ${{ startsWith(github.ref, 'refs/tags/') }}
        tag_with_ref: true


  deploy:
   # needs: [docker-build]
    name: Deploying in Heroku
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Login to Heroku Container registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Build and push "web" image to heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web

      - name: Deploying "web" image on heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku config:set SECRET_KEY="${{ secrets.PROD_SECRET_KEY }}" -a ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set DB_NAME=${{ secrets.PROD_DB_NAME }} -a ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set DB_USER=${{ secrets.PROD_DB_USER }} -a ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set DB_PASS=${{ secrets.PROD_DB_PASS }} -a ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set DB_HOST=${{ secrets.PROD_DB_HOST }} -a ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set DB_PORT=${{ secrets.PROD_DB_PORT }} -a ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set DEBUG=True -a ${{ secrets.HEROKU_APP_NAME }}
          heroku config:set ALLOWED_HOSTS=${{ secrets.PROD_ALLOWED_HOSTS }} -a ${{ secrets.HEROKU_APP_NAME }}

          heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web
          heroku ps:scale -a ${{ secrets.HEROKU_APP_NAME }} web=1
